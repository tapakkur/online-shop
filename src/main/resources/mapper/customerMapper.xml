<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qakmak.eshop.dao.UserDao">
    <resultMap id="BaseResultMap" type="com.qakmak.eshop.common.User">
        <id column="userId" property="id" jdbcType="INTEGER" />
        <result column="userName" property="name" jdbcType="VARCHAR" />
        <result column="loginName" property="loginName" jdbcType="VARCHAR" />
        <result column="passwd" property="password" jdbcType="VARCHAR" />
        <result column="phone" property="phone" jdbcType="VARCHAR" />
        <result column="address" property="address" jdbcType="VARCHAR" />
        <collection property="orders" javaType="ArrayList"
                    column="userId" ofType="com.qakmak.eshop.common.Order"
                    select="com.qakmak.eshop.dao.OrderMapper.queryOrderByUserId"
                    fetchType="lazy">
            <id column="orderId" property="id" />
            <result column="orderNumber" property="code" />
            <result column="total" property="total" />
        </collection>
    </resultMap>

    <sql id="Base_Column_List">
        userId, userName, loginName, passwd, phone, address
    </sql>

    <!--添加用户信息-->
    <insert id="saveUser" parameterType="com.qakmak.eshop.common.User">
        INSERT INTO `tb_user` (userId, userName, loginName, passwd, phone, address)
        VALUES (#{id,jdbcType = VARCHAR}, #{name, jdbcType=VARCHAR}, #{loginName, jdbcType=VARCHAR},
        #{password, jdbcType=VARCHAR}, #{phone, jdbcType=VARCHAR}, #{address, jdbcType=VARCHAR})
    </insert>

    <!-- 删除用户 -->
    <delete id="deleteUser" parameterType="java.lang.Integer">
        DELETE FROM `tb_user`
        WHERE userId = #{id, jdbcType=INTEGER}
    </delete>

    <!-- 修改用户的信息 -->
    <update id="updateUser" parameterType="com.qakmak.eshop.common.User">
        UPDATE `tb_user`
        SET userName = #{name,jdbcType = VARCHAR}, loginName = #{loginName,jdbcType = VARCHAR},
            passwd = #{password,jdbcType = VARCHAR}, phone = #{phone,jdbcType = VARCHAR},
            address = #{address,jdbcType = VARCHAR}
        WHERE userId = #{id, jdbcType=INTEGER}
    </update>

    <!-- 查询用户的所有信息 -->
    <select id="queryByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        SELECT
        <include refid="Base_Column_List"/>
        FROM `tb_user`
        WHERE userId = #{id, jdbcType = INTEGER}
    </select>

    <!-- 查询所用用户的所有信息 -->
    <select id="queryAll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM `tb_user`
    </select>

    <!-- 模糊查询用户的所有信息 -->
    <select id="fuzzyQuery" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        <include refid="Base_Column_List"/>
        FROM `tb_user`
        WHERE userName LIKE concat('%', #{name}, '%')
    </select>

    <!--查询所用用户的信息（不包含订单，产品信息）-->
    <select id="findAllUser" resultType="com.qakmak.eshop.common.User">
        SELECT u.userId AS id, u.userName AS name, u.loginName,u.passwd AS password,u.phone, u.address
        FROM tb_user AS u;
    </select>

    <!--查询用户-->
    <select id="findUser" parameterType="java.lang.Integer" resultType="com.qakmak.eshop.common.User">
        SELECT u.userId AS id, u.userName AS name, u.loginName,u.passwd AS password,u.phone, u.address
        FROM tb_user AS u
        WHERE u.userId = #{id};
    </select>

    <!-- 模糊查询用户的信息 -->
    <select id="fuzzyFindUser" resultMap="com.qakmak.eshop.common.User" parameterType="java.lang.String">
        SELECT
            u.userId AS id, u.userName AS name, u.loginName,u.passwd AS password,u.phone, u.address
        FROM `tb_user`
        WHERE userName LIKE concat('%', #{name}, '%')
    </select>

</mapper>